name: Setyp SQL Servers

on:
  push:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        SqlServers: ["2022 LocalDB", "2022 Developer", "2022 Core", "2005 Core", "2005 Advanced", "2005 Advanced Update", "2008R2 Developer"]

    runs-on: windows-latest  

    env:
      PS1_TROUBLE_SHOOT: On
      SQLSERVERS_MEDIA_FOLDER: 'C:\Sql-Media'
      SQLSERVERS_SETUP_FOLDER: 'C:\Sql-Setup'

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 888888

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Uninstall LocalDB
      run: '& powershell -f Scripts\Uninstall-LocalDB.ps1'

    - name: Show Env
      run: |
        Write-Host "CPU: $((Get-WmiObject Win32_Processor).Name), $([System.Environment]::ProcessorCount) Cores"
        Write-Host "OS: $((Get-WmiObject Win32_OperatingSystem | select -Property Caption | Select -First 1).Caption)"
        get-wmiobject win32_service | where {$_.Name -Like "MSSQL`$*" } | Format-Table -AutoSize | Out-String -Width 1111
        
        & cmd.exe /c "set|sort"

    - name: Show Env
      run: '& cmd.exe /c "set|sort"'

    - name: Setup Sql Server
      env:
        SQL_SERVERS: ${{ matrix.SqlServers }}
      run: '& powershell -f Scripts\Setup-SqlServers.ps1 -SqlServers "$($ENV:SQL_SERVERS)"'

    - name: Show SQL Servers
      env:
        SQL_SERVERS: ${{ matrix.SqlServers }}
      run: |
       $ENV:SYSTEM_ARTIFACTSDIRECTORY="C:\Temp"
       if (-not ("$($ENV:SQL_SERVERS)" -match "LocalDB")) {
         Remove-Item -Path "HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server Local DB\Installed Versions" -Recurse -Force -EA SilentlyContinue
       }
       
       cd Scripts
       & 7z.exe x LocalSqlDiscovery-net4.5.7z -oc:\Temp\ > $null
       cd c:\Temp\LocalSqlDiscovery-net4.5
       $outputFile = "SHOW-SQL-Servers.log"
       & .\SHOW-SQL-Servers.cmd *| tee "$outputFile"
       $mediumVersion = Get-Content "$outputFile" | ? {$_ -match "Medium Version"} | % {$_.Split(":") | Select -Last 1}
       $Utf8 = New-Object System.Text.UTF8Encoding $False
       $sqlDef = "{0,-33}" -f "$($ENV:SQL_SERVERS)"
       $mediumVersionFormatted = "{0,-77}" -f "$mediumVersion"
       [System.IO.File]::WriteAllLines("$($ENV:SYSTEM_ARTIFACTSDIRECTORY)\VERSION.LOG", "| $sqlDef | $mediumVersionFormatted |", $utf8)
       [System.IO.File]::WriteAllLines("$($ENV:SYSTEM_ARTIFACTSDIRECTORY)\Medium Version.txt", "$mediumVersion", $utf8)
       
       Get-WmiObject -class "Win32_PageFileUsage" -namespace "root\CIMV2" -computername localhost | Format-Table Caption, Name, PeakUsage, AllocatedBaseSize, CurrentUsage -AutoSize | Out-String -Width 256

