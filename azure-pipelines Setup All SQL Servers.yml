variables:
  NUGET_VERSION: 0.1
  PS1_TROUBLE_SHOOT: On

trigger:
  branches:
    include:
    - main

jobs:

- job: Install
  pool:
    vmImage: '$(IMAGE)'
  timeoutInMinutes: 360
  strategy:
    maxParallel: 4
    matrix:
      '2022 2019 on Server2019':
        IMAGE: 'windows-2019'
        TEST_SQL_VERSIONS: '2022 2019'
        TEST_SQL_UPDATES: False
      '2017 2016 2014 2012 on Server2019':
        IMAGE: 'windows-2019'
        TEST_SQL_VERSIONS: '2017 2016 2014 2012'
        TEST_SQL_UPDATES: False
      '2017 on Server2019':
        IMAGE: 'windows-2019'
        TEST_SQL_VERSIONS: '2017'
        TEST_SQL_UPDATES: False
      '2008 2005 on Server2019':
        IMAGE: 'windows-2019'
        TEST_SQL_VERSIONS: '2008 2005'
        TEST_SQL_UPDATES: False

  steps:

  - powershell: |
      Write-Host "CPU: $((Get-WmiObject Win32_Processor).Name), $([System.Environment]::ProcessorCount) Cores"

      gdr -PSProvider 'FileSystem'

    displayName: 'Bootstrap'

  - powershell: |
       cd Scripts
       powershell -f "[Test] Setup All The SQL Servers.ps1" *| tee "$($ENV:SYSTEM_ARTIFACTSDIRECTORY)\FULL-LOG.txt"
       gdr -PSProvider 'FileSystem'
       # Install-Module -Force Platform-Info
    condition: succeededOrFailed()
    displayName: 'Install'

  - powershell: |
       get-wmiobject win32_service | where {$_.Name.ToLower().IndexOf("sql") -ge 0 } | sort-object -Property "DisplayName" | ft State, Name, DisplayName, StartMode, StartName
       cd Scripts
       powershell -f "[Test] Publish SQL Server Setup Logs.ps1" 
       gdr -PSProvider 'FileSystem'
    condition: succeededOrFailed()
    displayName: 'Publish Setup Logs'

  - bash: |
      set -eu; set -o pipefail
      d=$PWD
      pushd "$(System.ARTIFACTSDIRECTORY)"
      7z a -mx=1 -ms=on -mqs=on "Source-$(Agent.JobName).7z" "$d"
      popd
    condition: succeededOrFailed()
    displayName: 'Prepare Artifacts'

  - task: PublishBuildArtifacts@1
    condition: succeededOrFailed()
    displayName: 'Publish'
    inputs:
      pathtoPublish: '$(System.ARTIFACTSDIRECTORY)'
      artifactName: '$(Agent.JobName)'

